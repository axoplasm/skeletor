@use "lib";
@use "variables";
@use "fonts";
@use "sass:string";

//  layout
div[role='document'] {
    max-width: var(--large-width);
    margin-inline: auto;
    padding-inline: 1rem;
    @include lib.breakpoint(calc(variables.$large-width + 2rem)) {
        padding-inline: 0;
    }
    // styleguide page elements
    & > aside {
        font-size: 85%;
        margin-block: 1rem;
        text-align: end;
    }
    & > footer {
        border-block-start: var(--default-border-width) solid var(--whisper);
        font-size: 85%;
        margin-block: 1rem;
        padding-block-start: 1rem;
    }
    & > main {
        & > nav {
            menu {
                display: flex;
                flex-wrap: wrap;
                margin-inline: 0;
            }
            li {
                margin-inline-end: 0.5rem;
            }
        }
        & > section {
            border-block-start: var(--default-border-width) solid var(--whisper);
            margin-block-end: 3rem;
        }
    }
}

// colors
@each $name, $color in variables.$color-primitives {
    .bg-#{$name} {
        background: var(--#{$name});
    }
    .fg-#{$name} {
        color: var(--#{$name});
    }
}
@each $name, $color in variables.$gray-primitives {
    .bg-#{$name} {
        background: var(--#{$name});
    }
    .fg-#{$name} {
        color: var(--#{$name});
    }
}
@each $name in variables.$abstract-colors {
    .bg-#{$name} {
        background: var(--#{$name});
    }
    .fg-#{$name} {
        color: var(--#{$name});
    }
}
.styleguide-color {
    background-color: var(--black);
    color: var(--white);
    margin-block-end: 0.125rem;
    padding: 0.25rem;
    width: 50%;
}

// font weights
// font-weights
@each $weight, $name in fonts.$weights {
    $_name: string.to-lower-case(#{$name});
    .weight-#{$_name} {
        font-weight: var(--#{$_name}-weight);
    }
}


// Buttons
a.button {
    @include lib.buttonish(var(--info), white);
}
a.button-hot {
    @include lib.buttonish(var(--emphasis), white);
}
a.button-cool {
    @include lib.buttonish(var(--hushed), white);
}

// images
.responsive-image {
    display: block;
    margin-inline: auto;
    max-width: 100%;
}

// unsorted
.text-align-end {
    text-align: end;
}
.nowrap {
    white-space: nowrap;
}
