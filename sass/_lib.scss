@mixin breakpoint($breakpoint) {
    @media (min-width: $breakpoint) {
        @content;
    }
}

@mixin buttonish($background-color: var(--hushed), $link-color: var(--white)) {
    background-color: $background-color;
    border: none;
    border-radius: var(--default-border-radius);
    color: $link-color;
    display: inline-block;
    font-weight: var(--bold-weight);
    padding: 0.5rem 1rem;
    text-decoration: none;
    &:hover {
        opacity: 0.8;
        cursor: pointer;
        transition: var(--default-transition);
    }
}

@mixin container($width) {
    clear: both;
    content: " ";
    display: block;
    margin-inline-end: auto;
    margin-inline-start: auto;
    max-width: $width;
}

@mixin color-selectors($map) {
    @each $name, $color in $map {
        .bg-#{$name} {
            background: var(--#{$name});
        }
        .fg-#{$name} {
            color: var(--#{$name});
        }
    }
}

@mixin caret(
    // generates a pair of background images that can be used as a caret e.g. in select or summary elements
    $direction: right,          // which way the caret points: right, down, left, up
    $color: var(--loud),        // caret color
    $size: 0.75rem,             // width of the caret in its long dimension
    $inline-offset: 0.75rem,    // distance from the inline edge of the element
    $block-offset: 1rem,        // distance from the block edge of the element
    $side: right,               // which inline side the element is positioned to
) {
    $bgsize: $size * 0.5;        // the size of each bg img

    background-repeat: no-repeat;
    background-size: $bgsize $bgsize, $bgsize $bgsize;

    @if $direction == right {
        background-image: 
            linear-gradient(45deg, $color 50%, transparent 50%), 
            linear-gradient(135deg, $color 50%, transparent 50%);
        background-position: 
            $side $inline-offset top $block-offset,
            $side $inline-offset top #{$block-offset + $bgsize};
    }
    @if $direction == left {
        background-image: 
            linear-gradient(315deg, $color 50%, transparent 50%), 
            linear-gradient(225deg, $color 50%, transparent 50%);
        background-position: 
            $side $inline-offset top $block-offset,
            $side $inline-offset top #{$block-offset + $bgsize};
    }
    @if $direction == down {
        background-image: 
            linear-gradient(225deg, $color 50%, transparent 50%), 
            linear-gradient(135deg, $color 50%, transparent 50%);
        background-position: 
            $side #{$inline-offset + $bgsize} top $block-offset,
            $side $inline-offset top $block-offset;
    }
    @if $direction == up {
        background-image: 
            linear-gradient(315deg, $color 50%, transparent 50%), 
            linear-gradient(45deg, $color 50%, transparent 50%);
        background-position: 
            $side #{$inline-offset + $bgsize} top $block-offset,
            $side $inline-offset top $block-offset;
    }
}
